{"version":3,"sources":["App.js","components/shared/additionalInfoDialog.js","components/forms/fields/idc1Fields/referenceNumber.js","components/forms/fields/idc1Fields/documentType.js","components/forms/fields/idc1Fields/companyTaxNumber.js","components/forms/fields/idc1Fields/companyBranch.js","components/forms/fields/idc1Fields/companyNameTH.js","components/forms/fields/idc1Fields/companyNameEN.js","components/forms/fields/idc1Fields/addressField.js","components/forms/fields/idc1Fields/tambonSelection.js","components/forms/fields/idc1Fields/addressSelectors.js","components/forms/fields/idc1Fields/postCode.js","components/forms/idc1.js","components/forms/fields/idc2Fields/brokerTaxNumber.js","components/forms/fields/idc2Fields/brokerBranch.js","components/forms/fields/idc2Fields/customsClearanceId.js","components/forms/fields/idc2Fields/customsClearanceName.js","components/forms/fields/idc2Fields/managerId.js","components/forms/fields/idc2Fields/managerName.js","components/forms/fields/idc2Fields/modeOfTransport.js","components/forms/fields/idc2Fields/cargoTypeCode.js","components/forms/fields/idc2Fields/infoBody/vesselNameInfoBody.js","components/forms/fields/idc2Fields/vesselName.js","components/forms/idc2.js","components/formPage.js","serviceWorker.js","index.js"],"names":["THEME","createMuiTheme","typography","fontFamily","fontSize","useNextVariants","App","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","theme","_components_formPage__WEBPACK_IMPORTED_MODULE_9__","Component","hot","module","AdditionalInfoDialog","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","setState","state","open","handleClose","react_default","react","index_es","onClick","Info_default","onClose","variant","titleTH","color","titleEN","style","marginTop","marginBottom","children","format","ReferenceNumberField","handleChange","referenceNumber","lib","name","id","required","onChange","value","label","margin","placeholder","InputProps","endAdornment","position","additionalInfoDialog","fullWidth","validators","errorMessages","documentTypes","DocumentTypeField","documentType","select","map","option","key","CompanyTaxNumberField","companyTaxNumber","CompanyBranchField","companyBranch","helperText","CompanyNameFieldTH","companyNameTH","CompanyNameFieldEN","companyNameEN","AddressField","streetAndNumber","TambonSelect","selected","searchInput","handleSelect","filteredTambons","slice","tambon","pid","AddressSelectors","handleSeachInput","event","target","defineProperty","updateSelectedTambon","selectedTambon","tambons","find","innerText","trim","updateSelectedAmphoe","selectedAmphoe","amphoes","amphoe","amphoe_pid","updateSelectedProvince","selectedProvince","provinces","province","changwat_pid","changwats","_this2","_this$state","filter","includes","type","tambonSelection","PostCode","postCode","fieldList","ImportDeclarationControl1","saveToLocalStorage","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","pair","localStorage","setItem","err","return","handleSubmit","preventDefault","FormData","handlenext","forEach","field","getItem","ref","onSubmit","onError","errors","console","log","noValidate","autoComplete","idc1Fields_referenceNumber","idc1Fields_documentType","idc1Fields_companyTaxNumber","idc1Fields_companyBranch","idc1Fields_companyNameTH","idc1Fields_companyNameEN","addressField","addressSelectors","idc1Fields_postCode","BrokerTaxNumber","brokerTaxNumber","BrokerBranch","brokerBranch","CustomsClearanceID","customsClearanceId","CustomsClearanceName","customsClearanceName","ManagerID","managerId","ManagerName","managerName","transportModes","ModeOfTransport","modeOfTransport","CargoTypeCode","cargoTypeCode","mode","enter","VesselNameInfoBody","overflow","datum","VesselName","vesselName","vesselNameInfoBody","ImportDeclarationControl2","specialHandleChange","_this$setState2","fillVesselName","arrivalDate","masterBillOfLanding","houseBillOfLanding","outsideReleasePort","idc2Fields_brokerTaxNumber","idc2Fields_brokerBranch","idc2Fields_customsClearanceId","idc2Fields_customsClearanceName","idc2Fields_managerId","idc2Fields_managerName","idc2Fields_modeOfTransport","idc2Fields_cargoTypeCode","idc2Fields_vesselName","steps","FormPage","handleNext","activeStep","handleBack","handleReset","getStepContent","bind","assertThisInitialized","step","idc1","className","classes","button","idc2","Error","layout","paper","align","stepper","length","gutterBottom","buttons","withStyles","width","marginLeft","spacing","unit","marginRight","breakpoints","up","padding","concat","display","justifyContent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d32d412.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { hot } from 'react-hot-loader';\nimport './App.css';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport FormPage from './components/formPage';\n\nconst THEME = createMuiTheme({\n  typography: {\n    fontFamily: 'Noto Sans Thai, Noto',\n    fontSize: 15,\n    useNextVariants: true,\n  },\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <MuiThemeProvider theme={THEME}>\n          <FormPage />\n        </MuiThemeProvider>\n      </Fragment>\n    );\n  }\n}\n\nexport default hot(module)(App);\n","import React, { Component, Fragment } from 'react';\nimport {\n  Dialog,\n  Card,\n  Typography,\n  IconButton,\n  CardContent,\n  Divider,\n} from '@material-ui/core';\nimport Info from '@material-ui/icons/Info';\n\nclass AdditionalInfoDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  handleClick = () => {\n    this.setState(state => ({\n      open: !state.open,\n    }));\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <IconButton onClick={this.handleClick}>\n          <Info fontSize=\"small\" />\n        </IconButton>\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">{this.props.titleTH}</Typography>\n              <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                {this.props.titleEN}\n              </Typography>\n              <Divider style={{ marginTop: 15, marginBottom: 15 }} />\n              <Typography variant=\"subtitle1\">คำอธิบาย</Typography>\n\n              {this.props.children}\n              <br />\n              <Typography variant=\"subtitle1\">รูปแบบการกรอก</Typography>\n              <Typography color=\"textSecondary\">{this.props.format}</Typography>\n            </CardContent>\n          </Card>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nexport default AdditionalInfoDialog;\n","import React, { Fragment } from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\nimport { InputAdornment, Typography } from '@material-ui/core';\nimport AdditionalInfoDialog from '../../../shared/additionalInfoDialog';\n\nconst ReferenceNumberField = props => {\n  const { handleChange, referenceNumber } = props;\n  return (\n    <TextValidator\n      name=\"referenceNumber\"\n      id=\"referenceNumber\"\n      required\n      onChange={handleChange}\n      value={referenceNumber}\n      label=\"เลขที่อ้างอิง\"\n      style={{ margin: 8 }}\n      placeholder=\"xxxxnnnnnnnnnxxxx\"\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <AdditionalInfoDialog\n              titleTH=\"เลขที่อ้างอิง\"\n              titleEN=\"Reference Number\"\n              format=\"an13\"\n            >\n              <Fragment>\n                <Typography color=\"textSecondary\">\n                  เลขที่อ้างอิง xxxxnnnnnnnnnxxxx\n                </Typography>\n                <Typography color=\"textSecondary\">\n                  (4) = Profile Name nnnnnnnnn\n                </Typography>\n                <Typography color=\"textSecondary\">\n                  (9) = Running Number\n                </Typography>\n              </Fragment>\n            </AdditionalInfoDialog>\n          </InputAdornment>\n        ),\n      }}\n      fullWidth\n      margin=\"normal\"\n      validators={[\n        'required',\n        'matchRegexp:^[A-Za-z0-9]*$',\n        'minStringLength:13',\n        'maxStringLength:13',\n      ]}\n      errorMessages={[\n        'จำเป็นต้องกรอก',\n        'กรอกได้เฉพาะตัวอักษร A-Z และเลข 0-9',\n        'ต้องกรอกให้ครบ 13 หลัก',\n        'ต้องกรอกไม่เกิน 13 หลัก',\n      ]}\n    />\n  );\n};\n\nexport default ReferenceNumberField;\n","import React from 'react';\nimport { SelectValidator } from 'react-material-ui-form-validator';\nimport { MenuItem } from '@material-ui/core';\n\nconst documentTypes = [\n  {\n    value: 0,\n    label: '0 – ใบขนสินค้าขาเข้า',\n  },\n  {\n    value: 3,\n    label: '3 – คําร้องขอรับของไปก่อน',\n  },\n  {\n    value: 5,\n    label: '5 - ใบขนสินค้าเข้าปากระวาง',\n  },\n  {\n    value: 'X',\n    label: 'X – ใบขนสินค้าขาเข้าเร่งด่วน (Express)',\n  },\n];\n\nconst DocumentTypeField = props => {\n  const { handleChange, documentType } = props;\n  return (\n    <SelectValidator\n      id=\"documentType\"\n      required\n      name=\"documentType\"\n      onChange={handleChange}\n      value={documentType}\n      select\n      label=\"ชนิดเอกสาร\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={['required']}\n      errorMessages={['จำเป็นต้องเลือก']}\n    >\n      {documentTypes.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </SelectValidator>\n  );\n};\n\nexport default DocumentTypeField;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst CompanyTaxNumberField = props => {\n  const { handleChange, companyTaxNumber } = props;\n  return (\n    <TextValidator\n      name=\"companyTaxNumber\"\n      id=\"companyTaxNumber\"\n      required\n      onChange={handleChange}\n      value={companyTaxNumber}\n      label=\"เลขประจําตัวผู้เสียภาษีอากร\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={[\n        'required',\n        'matchRegexp:^[A-Za-z0-9]*$',\n        'maxStringLength:17',\n      ]}\n      errorMessages={[\n        'จำเป็นต้องกรอก',\n        'กรอกได้เฉพาะตัวอักษร A-Z และเลข 0-9',\n        'ต้องกรอกไม่เกิน 17 หลัก',\n      ]}\n    />\n  );\n};\n\nexport default CompanyTaxNumberField;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst CompanyBranchField = props => {\n  const { handleChange, companyBranch } = props;\n  return (\n    <TextValidator\n      name=\"companyBranch\"\n      id=\"companyBranch\"\n      required\n      onChange={handleChange}\n      value={companyBranch}\n      label=\"สาขาที่อยู่ของบริษัทผู้นำเข้า\"\n      style={{ margin: 8 }}\n      helperText=\"ไม่มีสาขาให้กรอก 0\"\n      fullWidth\n      margin=\"normal\"\n      validators={['required', 'matchRegexp:^[0-9]*$', 'maxStringLength:6']}\n      errorMessages={[\n        'จำเป็นต้องกรอก',\n        'กรอกได้เฉพาะตัวเลข 0-9',\n        'ต้องกรอกไม่เกิน 6 หลัก',\n      ]}\n    />\n  );\n};\n\nexport default CompanyBranchField;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst CompanyNameFieldTH = props => {\n  const { handleChange, companyNameTH } = props;\n  return (\n    <TextValidator\n      name=\"companyNameTH\"\n      id=\"companyNameTH\"\n      required\n      onChange={handleChange}\n      value={companyNameTH}\n      label=\"ชื่อบริษัทภาษาไทย\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={[\n        'required',\n        'matchRegexp:^[^A-Za-z]*$',\n        'maxStringLength:120',\n      ]}\n      errorMessages={[\n        'จำเป็นต้องกรอก',\n        'กรุณากรอกเป็นภาษาไทยล้วน',\n        'ความยาวสูงสุด 120 ตัวอักษร',\n      ]}\n    />\n  );\n};\n\nexport default CompanyNameFieldTH;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst CompanyNameFieldEN = props => {\n  const { handleChange, companyNameEN } = props;\n  return (\n    <TextValidator\n      name=\"companyNameEN\"\n      id=\"companyNameEN\"\n      required\n      onChange={handleChange}\n      value={companyNameEN}\n      label=\"ชื่อบริษัทภาษาอังกฤษ\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={[\n        'required',\n        'matchRegexp:^[^ขฃฉฐถผฝศษสหกจฎฏดตบปอคฅฆงชซฌญฑฒณทธนพฟภมยรลวฬฮ]*$',\n        'maxStringLength:70',\n      ]}\n      errorMessages={[\n        'จำเป็นต้องกรอก',\n        'กรุณากรอกเป็นภาษาอังกฤษล้วน',\n        'ความยาวสูงสุด 70 ตัวอักษร',\n      ]}\n    />\n  );\n};\n\nexport default CompanyNameFieldEN;\n","import React, { Fragment } from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst AddressField = props => {\n  const { streetAndNumber, handleChange } = props;\n  return (\n    <Fragment>\n      <TextValidator\n        name=\"streetAndNumber\"\n        id=\"streetAndNumber\"\n        required\n        onChange={handleChange}\n        value={streetAndNumber}\n        label=\"ที่อยู่บริษัท\"\n        style={{ margin: 8 }}\n        helperText=\"เช่น เลขที่ 5 ถนนเจริญกรุง\"\n        fullWidth\n        margin=\"normal\"\n        validators={['required', 'maxStringLength:70']}\n        errorMessages={['จำเป็นต้องกรอก', 'ต้องกรอกไม่เกิน 70 ตัวอักษร']}\n      />\n    </Fragment>\n  );\n};\n\nexport default AddressField;\n","import React, { Fragment } from 'react';\nimport { MenuItem } from '@material-ui/core';\n\nconst TambonSelect = props => {\n  const { selected, searchInput, handleSelect, filteredTambons } = props;\n\n  return selected || searchInput === '' ? (\n    ''\n  ) : (\n    <Fragment>\n      {filteredTambons.slice(0, 5).map(tambon => (\n        <MenuItem key={tambon.pid} onClick={handleSelect} value={tambon.name}>\n          {tambon.name}\n        </MenuItem>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default TambonSelect;\n","import React, { Fragment, Component } from 'react';\nimport * as tambons from '../../../../addressInfo/tambon';\nimport * as province from '../../../../addressInfo/province';\nimport * as amphoes from '../../../../addressInfo/amphoe';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nimport TambonSelect from './tambonSelection';\n\nclass AddressSelectors extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTambon: '',\n      selectedAmphoe: '',\n      selectedProvince: '',\n      searchInput: '',\n      tambons: tambons.th.tambons,\n      amphoes: amphoes.th.amphoes,\n      provinces: province.th.changwats,\n      selected: false,\n    };\n  }\n\n  handleSeachInput = event => {\n    this.setState({\n      selected: false,\n      searchInput: event.target.value,\n    });\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  updateSelectedTambon = event => {\n    this.setState({\n      selectedTambon: this.state.tambons.find(\n        tambon => tambon.name === event.target.innerText.trim()\n      ),\n    });\n  };\n\n  updateSelectedAmphoe = () => {\n    this.setState(state => ({\n      selectedAmphoe: state.amphoes.find(\n        amphoe => amphoe.pid === state.selectedTambon.amphoe_pid\n      ).name,\n    }));\n  };\n\n  updateSelectedProvince = () => {\n    this.setState(state => ({\n      selectedProvince: state.provinces.find(\n        province => province.pid === state.selectedTambon.changwat_pid\n      ).name,\n    }));\n  };\n\n  handleSelect = event => {\n    this.updateSelectedTambon(event);\n    this.updateSelectedAmphoe();\n    this.updateSelectedProvince();\n    this.setState({\n      selected: true,\n      searchInput: event.target.innerText.trim(),\n    });\n  };\n\n  render() {\n    const {\n      searchInput,\n      selected,\n      selectedAmphoe,\n      tambons,\n      selectedProvince,\n    } = this.state;\n    const { handleSelect, handleSeachInput, handleChange } = this;\n\n    const filteredTambons = tambons.filter(tambon =>\n      tambon.name.includes(this.state.searchInput)\n    );\n\n    return (\n      <Fragment>\n        <TextValidator\n          id=\"companyTambon\"\n          name=\"companyTambon\"\n          fullWidth\n          margin=\"normal\"\n          style={{ margin: 8 }}\n          label=\"ตำบล / แขวง\"\n          helperText=\"ไม่มีให้เว้นว่าง\"\n          type=\"search\"\n          value={searchInput}\n          onChange={handleSeachInput}\n          validators={['maxStringLength:35']}\n          errorMessages={['ความยาวสูงสุด 35 ตัวอักษร']}\n        />\n        <TambonSelect\n          searchInput={searchInput}\n          selected={selected}\n          handleSelect={handleSelect}\n          filteredTambons={filteredTambons}\n        />\n        <TextValidator\n          id=\"subProvince\"\n          name=\"subProvince\"\n          onChange={handleChange('selectedAmphoe')}\n          value={selectedAmphoe}\n          helperText=\"กรุณาเลือกตำบล/แขวงก่อน | ไม่มีให้เว้นว่าง\"\n          label=\"อำเภอ / เขต\"\n          style={{ margin: 8 }}\n          fullWidth\n          margin=\"normal\"\n          validators={['maxStringLength:35']}\n          errorMessages={['ความยาวสูงสุด 35 ตัวอักษร']}\n        />\n        <TextValidator\n          id=\"province\"\n          name=\"province\"\n          onChange={handleChange('selectedProvince')}\n          value={selectedProvince}\n          helperText=\"กรุณาเลือกตำบล/แขวงก่อน | ไม่มีให้เว้นว่าง\"\n          label=\"จังหวัด\"\n          style={{ margin: 8 }}\n          fullWidth\n          margin=\"normal\"\n          validators={['maxStringLength:35']}\n          errorMessages={['ความยาวสูงสุด 35 ตัวอักษร']}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default AddressSelectors;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst PostCode = props => {\n  const { postCode, handleChange } = props;\n  return (\n    <TextValidator\n      id=\"postCode\"\n      required\n      name=\"postCode\"\n      onChange={handleChange}\n      value={postCode}\n      label=\"รหัสไปรษณีย์\"\n      style={{ margin: 8 }}\n      fullWidth\n      validators={['required', 'maxStringLength:9']}\n      errorMessages={['จำเป็นต้องกรอก', 'ความยาวสูงสุด 9 ตัวอักษร']}\n    />\n  );\n};\n\nexport default PostCode;\n","import React, { Component } from 'react';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport ReferenceNumberField from './fields/idc1Fields/referenceNumber';\nimport DocumentTypeField from './fields/idc1Fields/documentType';\nimport CompanyTaxNumberField from './fields/idc1Fields/companyTaxNumber';\nimport CompanyBranchField from './fields/idc1Fields/companyBranch';\nimport CompanyNameFieldTH from './fields/idc1Fields/companyNameTH';\nimport CompanyNameFieldEN from './fields/idc1Fields/companyNameEN';\nimport AddressField from './fields/idc1Fields/addressField';\nimport AddressSelectors from './fields/idc1Fields/addressSelectors';\nimport PostCode from './fields/idc1Fields/postCode';\n\nconst fieldList = [\n  'referenceNumber',\n  'documentType',\n  'companyTaxNumber',\n  'companyBranch',\n  'companyNameTH',\n  'companyNameEN',\n  'streetAndNumber',\n  'postCode',\n];\n\nclass ImportDeclarationControl1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      referenceNumber: '',\n      documentType: '',\n      companyTaxNumber: '',\n      companyBranch: '',\n      companyNameTH: '',\n      companyNameEN: '',\n      streetAndNumber: '',\n      postCode: '',\n    };\n  }\n\n  componentDidMount() {\n    fieldList.forEach(field => {\n      if (localStorage.getItem(field) !== null) {\n        this.setState({\n          [field]: localStorage.getItem(field),\n        });\n      }\n    });\n  }\n\n  saveToLocalStorage = data => {\n    for (const pair of data.entries()) {\n      localStorage.setItem(pair[0], pair[1]);\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    this.saveToLocalStorage(data);\n    this.props.handlenext();\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      referenceNumber,\n      documentType,\n      companyTaxNumber,\n      companyBranch,\n      companyNameTH,\n      companyNameEN,\n      streetAndNumber,\n      postCode,\n    } = this.state;\n\n    return (\n      <ValidatorForm\n        ref=\"form\"\n        onSubmit={this.handleSubmit}\n        onError={errors => console.log(errors)}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <ReferenceNumberField\n          referenceNumber={referenceNumber}\n          handleChange={this.handleChange}\n        />\n        <DocumentTypeField\n          documentType={documentType}\n          handleChange={this.handleChange}\n        />\n        <CompanyTaxNumberField\n          companyTaxNumber={companyTaxNumber}\n          handleChange={this.handleChange}\n        />\n        <CompanyBranchField\n          companyBranch={companyBranch}\n          handleChange={this.handleChange}\n        />\n        <CompanyNameFieldTH\n          companyNameTH={companyNameTH}\n          handleChange={this.handleChange}\n        />\n        <CompanyNameFieldEN\n          companyNameEN={companyNameEN}\n          handleChange={this.handleChange}\n        />\n        <AddressField\n          streetAndNumber={streetAndNumber}\n          handleChange={this.handleChange}\n        />\n        <AddressSelectors handleChange={this.handleChange} />\n        <PostCode handleChange={this.handleChange} postCode={postCode} />\n        {this.props.children}\n      </ValidatorForm>\n    );\n  }\n}\nexport default ImportDeclarationControl1;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst BrokerTaxNumber = props => {\n  const { handleChange, brokerTaxNumber } = props;\n  return (\n    <TextValidator\n      name=\"brokerTaxNumber\"\n      id=\"brokerTaxNumber\"\n      onChange={handleChange}\n      value={brokerTaxNumber}\n      label=\"Broker Tax Number\"\n      helperText=\"เลขประจําตัวผู้เสียภาษีอากรของ Broker\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={['matchRegexp:^[A-Za-z0-9]*$', 'maxStringLength:17']}\n      errorMessages={[\n        'กรอกได้เฉพาะตัวอักษร A-Z และเลข 0-9',\n        'ต้องกรอกไม่เกิน 17 หลัก',\n      ]}\n    />\n  );\n};\n\nexport default BrokerTaxNumber;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst BrokerBranch = props => {\n  const { handleChange, brokerBranch } = props;\n  return (\n    <TextValidator\n      name=\"brokerBranch\"\n      id=\"brokerBranch\"\n      onChange={handleChange}\n      value={brokerBranch}\n      label=\"Broker Branch\"\n      helperText=\"สาขาที่อยู่ของ Broker | ไม่มีสาขาให้กรอก 0\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={['matchRegexp:^[0-9]*$', 'maxStringLength:6']}\n      errorMessages={['กรอกได้เฉพาะตัวเลข 0-9', 'ต้องกรอกไม่เกิน 6 หลัก']}\n    />\n  );\n};\n\nexport default BrokerBranch;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst CustomsClearanceID = props => {\n  const { handleChange, customsClearanceId } = props;\n  return (\n    <TextValidator\n      name=\"customsClearanceId\"\n      id=\"customsClearanceId\"\n      required\n      onChange={handleChange}\n      value={customsClearanceId}\n      label=\"Customs Clearance ID\"\n      helperText=\"เลขบัตรประชาชนผู้ปฏิบัติหน้าที่เกี่ยวกับการผ่านพิธีการศุลกากร\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={[\n        'required',\n        'matchRegexp:^[A-Za-z0-9]*$',\n        'maxStringLength:17',\n      ]}\n      errorMessages={[\n        'จำเป็นต้องกรอก',\n        'กรอกเฉพาะตัวอักษรหรือตัวเลข',\n        'ต้องกรอกไม่เกิน 17 หลัก',\n      ]}\n    />\n  );\n};\n\nexport default CustomsClearanceID;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst CustomsClearanceName = props => {\n  const { handleChange, customsClearanceName } = props;\n  return (\n    <TextValidator\n      name=\"customsClearanceName\"\n      id=\"customsClearanceName\"\n      required\n      onChange={handleChange}\n      value={customsClearanceName}\n      label=\"Customs Clearance Name\"\n      helperText=\"ชื่อและนามสกุลผู้ปฏิบัติหน้าที่เกี่ยวกับการผ่านพิธีการศุลกากร\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={['required', 'maxStringLength:35']}\n      errorMessages={['จำเป็นต้องกรอก', 'ต้องกรอกไม่เกิน 35 หลัก']}\n    />\n  );\n};\n\nexport default CustomsClearanceName;\n","import React, { Fragment } from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst ManagerID = props => {\n  const { handleChange, managerId } = props;\n  return (\n    <Fragment>\n      <TextValidator\n        name=\"managerId\"\n        id=\"managerId\"\n        required\n        onChange={handleChange}\n        value={managerId}\n        label=\"Manager ID Card\"\n        helperText=\"เลขบัตรประชาชนผู้จัดการ / ผู้รับมอบอำนาจของบริษัทหรือ Broker\"\n        style={{ margin: 8 }}\n        fullWidth\n        margin=\"normal\"\n        validators={[\n          'required',\n          'matchRegexp:^[A-Za-z0-9]*$',\n          'maxStringLength:17',\n        ]}\n        errorMessages={[\n          'จำเป็นต้องกรอก',\n          'กรอกเฉพาะตัวอักษรหรือตัวเลข',\n          'ต้องกรอกไม่เกิน 17 หลัก',\n        ]}\n      />\n    </Fragment>\n  );\n};\n\nexport default ManagerID;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst ManagerName = props => {\n  const { handleChange, managerName } = props;\n  return (\n    <TextValidator\n      name=\"managerName\"\n      id=\"managerName\"\n      required\n      onChange={handleChange}\n      value={managerName}\n      label=\"Manager Name\"\n      helperText=\"ชื่อและนามสกุลผู้จัดการ | ผู้รับมอบอำนาจของบริษัทหรือ Broker\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={['required', 'maxStringLength:35']}\n      errorMessages={['จำเป็นต้องกรอก', 'ต้องกรอกไม่เกิน 35 หลัก']}\n    />\n  );\n};\n\nexport default ManagerName;\n","import React from 'react';\nimport { SelectValidator } from 'react-material-ui-form-validator';\nimport { MenuItem } from '@material-ui/core';\n\nconst transportModes = [\n  {\n    value: 1,\n    label: '1 - ทางเรือ',\n  },\n  {\n    value: 2,\n    label: '2 - ทางรถไฟ',\n  },\n  {\n    value: 3.1,\n    label: '3 - ทางรถยนต์',\n  },\n  {\n    value: 3.2,\n    label: '3 - คนเดินทางบก',\n  },\n  {\n    value: 4,\n    label: '4 - ทางเครื่องบิน',\n  },\n  {\n    value: 5,\n    label: '5 - ทางไปรษณีย์',\n  },\n  {\n    value: 7,\n    label: '7 - ทางท่อขนส่งทางบก',\n  },\n  {\n    value: 7,\n    label: '7 - ทางสายส่งไฟฟ้า',\n  },\n  {\n    value: 8,\n    label: '8 - ทางเรือที่เข้าออกด่านศุลกากรทางบก',\n  },\n  {\n    value: 8,\n    label: '8 - เรือเล็กทางทะเล',\n  },\n  {\n    value: 9,\n    label: '9 - ทางผู้โดยสารนำพาจากอากาศยาน',\n  },\n];\n\nconst ModeOfTransport = props => {\n  const { handleChange, modeOfTransport } = props;\n  return (\n    <SelectValidator\n      id=\"modeOfTransport\"\n      required\n      name=\"modeOfTransport\"\n      onChange={handleChange}\n      value={modeOfTransport}\n      select\n      label=\"Mode Of Transport\"\n      helperText=\"นําเข้าโดยทาง\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={['required']}\n      errorMessages={['จำเป็นต้องเลือก']}\n    >\n      {transportModes.map(option => (\n        <MenuItem key={option.label} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </SelectValidator>\n  );\n};\n\nexport default ModeOfTransport;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\n\nconst CargoTypeCode = props => {\n  const { handleChange, cargoTypeCode } = props;\n  return (\n    <TextValidator\n      name=\"cargoTypeCode\"\n      id=\"cargoTypeCode\"\n      required\n      onChange={handleChange}\n      value={cargoTypeCode}\n      label=\"Cargo Type Code\"\n      helperText=\"ประเภทของการบรรจุตามมาตรฐาน UNECE Recommendation 21\"\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={[\n        'required',\n        'matchRegexp:^[0-9]$',\n        'minNumber:0',\n        'maxNumber:9',\n      ]}\n      errorMessages={[\n        'จำเป็นต้องกรอก',\n        'ต้องเป็นตัวเลข 0-9 เท่านั้น',\n        'ต้องกรอกเป็นตัวเลข 1 หลัก',\n        'ต้องกรอกเป็นตัวเลข 1 หลัก',\n      ]}\n    />\n  );\n};\n\nexport default CargoTypeCode;\n","import React from 'react';\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from '@material-ui/core';\n\nconst data = [\n  {\n    value: 1,\n    mode: 'เรือ',\n    enter: 'ชื่อเรือ',\n  },\n  {\n    value: 2,\n    mode: 'รถไฟ',\n    enter: 'ชื่อรถไฟ',\n  },\n  {\n    value: 3,\n    mode: 'รถยนต์',\n    enter: 'BY TRUCK',\n  },\n  {\n    value: 3,\n    mode: 'คนเดินเข้ามา',\n    enter: 'ON FOOT',\n  },\n  {\n    value: 4,\n    mode: 'เครื่องบิน',\n    enter: 'หมายเลขเที่ยวบิน (Flight No.)',\n  },\n  {\n    value: 5,\n    mode: 'ไปรษณีย์',\n    enter: 'BY MAIL',\n  },\n  {\n    value: 7,\n    mode: 'ท่อ / สายส่ง',\n    enter: 'BY PIPE',\n  },\n  {\n    value: 8,\n    mode: 'เรือตามลำน้ำ / เรือเล็กทางทะเล',\n    enter: 'BY BOAT',\n  },\n  {\n    value: 9,\n    mode: 'ผู้โดยสารนำพาจากอากาศยาน',\n    enter: 'BY PASSENGER',\n  },\n];\n\nconst VesselNameInfoBody = () => {\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>เลขหมวด</TableCell>\n            <TableCell>นำเข้าทาง</TableCell>\n            <TableCell>ให้กรอก</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map(datum => {\n            return (\n              <TableRow key={datum.mode}>\n                <TableCell>{datum.value}</TableCell>\n                <TableCell>{datum.mode}</TableCell>\n                <TableCell>{datum.enter}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default VesselNameInfoBody;\n","import React from 'react';\nimport { TextValidator } from 'react-material-ui-form-validator';\nimport { InputAdornment } from '@material-ui/core';\nimport AdditionalInfoDialog from '../../../shared/additionalInfoDialog';\nimport VesselNameInfoBody from './infoBody/vesselNameInfoBody';\n\nconst VesselName = props => {\n  const { handleChange, vesselName } = props;\n  return (\n    <TextValidator\n      name=\"vesselName\"\n      id=\"vesselName\"\n      required\n      onChange={handleChange}\n      value={vesselName}\n      label=\"Vessel Name\"\n      helperText=\"ชื่อยานพาหนะ\"\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <AdditionalInfoDialog\n              titleTH=\"ชื่อยานพาหนะ\"\n              titleEN=\"Vessel Name\"\n              format=\"an..35\"\n            >\n              <VesselNameInfoBody />\n            </AdditionalInfoDialog>\n          </InputAdornment>\n        ),\n      }}\n      style={{ margin: 8 }}\n      fullWidth\n      margin=\"normal\"\n      validators={['required', 'maxStringLength:35']}\n      errorMessages={['จำเป็นต้องกรอก', 'ต้องกรอกไม่เกิน 35 หลัก']}\n    />\n  );\n};\n\nexport default VesselName;\n","import React, { Component, Fragment } from 'react';\nimport BrokerTaxNumber from './fields/idc2Fields/brokerTaxNumber';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport BrokerBranch from './fields/idc2Fields/brokerBranch';\nimport CustomsClearanceID from './fields/idc2Fields/customsClearanceId';\nimport CustomsClearanceName from './fields/idc2Fields/customsClearanceName';\nimport ManagerID from './fields/idc2Fields/managerId';\nimport ManagerName from './fields/idc2Fields/managerName';\nimport ModeOfTransport from './fields/idc2Fields/modeOfTransport';\nimport CargoTypeCode from './fields/idc2Fields/cargoTypeCode';\nimport VesselName from './fields/idc2Fields/vesselName';\n\nclass ImportDeclarationControl2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brokerTaxNumber: '',\n      brokerBranch: '',\n      customsClearanceId: '',\n      customsClearanceName: '',\n      managerId: '',\n      managerName: '',\n      modeOfTransport: '',\n      cargoTypeCode: '',\n      vesselName: '',\n      arrivalDate: '',\n      masterBillOfLanding: '',\n      houseBillOfLanding: '',\n      outsideReleasePort: '',\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  specialHandleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      vesselName: this.fillVesselName(event.target.value),\n    });\n  };\n\n  fillVesselName = value => {\n    switch (value) {\n      case 3.1:\n        return 'BY TRUCK';\n      case 3.2:\n        return 'ON FOOT';\n      case 5:\n        return 'BY MAIL';\n      case 7:\n        return 'BY PIPE';\n      case 8:\n        return 'BY BOAT';\n      case 9:\n        return 'BY PASSENGER';\n      default:\n        return '';\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    this.saveToLocalStorage(data);\n    this.props.handlenext();\n  };\n\n  render() {\n    const {\n      brokerTaxNumber,\n      brokerBranch,\n      customsClearanceId,\n      customsClearanceName,\n      managerId,\n      managerName,\n      modeOfTransport,\n      cargoTypeCode,\n      vesselName,\n    } = this.state;\n\n    const { handleChange, handleSubmit, specialHandleChange } = this;\n    return (\n      <Fragment>\n        <ValidatorForm onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n          <BrokerTaxNumber\n            handleChange={handleChange}\n            brokerTaxNumber={brokerTaxNumber}\n          />\n          {this.state.brokerTaxNumber !== '' ? (\n            <BrokerBranch\n              handleChange={handleChange}\n              brokerBranch={brokerBranch}\n            />\n          ) : (\n            ''\n          )}\n          <CustomsClearanceID\n            handleChange={handleChange}\n            customsClearanceId={customsClearanceId}\n          />\n          <CustomsClearanceName\n            handleChange={handleChange}\n            customsClearanceName={customsClearanceName}\n          />\n          <ManagerID handleChange={handleChange} managerId={managerId} />\n          <ManagerName handleChange={handleChange} managerName={managerName} />\n          <ModeOfTransport\n            handleChange={specialHandleChange}\n            modeOfTransport={modeOfTransport}\n          />\n          <CargoTypeCode\n            handleChange={handleChange}\n            cargoTypeCode={cargoTypeCode}\n          />\n          <VesselName handleChange={handleChange} vesselName={vesselName} />\n        </ValidatorForm>\n      </Fragment>\n    );\n  }\n}\n\nexport default ImportDeclarationControl2;\n","import React, { Component, Fragment } from 'react';\nimport {\n  withStyles,\n  CssBaseline,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n  TextField,\n} from '@material-ui/core';\nimport ImportDeclarationControl1 from './forms/idc1';\nimport ImportDeclarationControl2 from './forms/idc2';\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(700 + theme.spacing.unit * 2 * 2)]: {\n      width: 700,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(700 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nconst steps = ['1', '2', '3', '4', '5'];\n\nclass FormPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0,\n    };\n    this.getStepContent = this.getStepContent.bind(this);\n  }\n\n  handleNext = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep + 1,\n    }));\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <ImportDeclarationControl1 handlenext={this.handleNext}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={this.props.classes.button}\n            >\n              NEXT\n            </Button>\n          </ImportDeclarationControl1>\n        );\n      case 1:\n        return <ImportDeclarationControl2 />;\n      case 2:\n        return <TextField />;\n      case 3:\n        return <TextField />;\n      case 4:\n        return <TextField />;\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <Fragment>\n        <CssBaseline />\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h4\" align=\"center\">\n              ใบขนสินค้าขาเข้า\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\">\n              (1)\n            </Typography>\n            <Typography align=\"center\" variant=\"h5\">\n              Import Declaration Control\n            </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map(label => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <Fragment>\n              {activeStep === steps.length ? (\n                <Fragment>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Thank you for your order.\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    Your order number is #2001539. We have emailed your order\n                    confirmation, and will send you an update when your order\n                    has shipped.\n                  </Typography>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  {this.getStepContent(activeStep)}\n                  <div className={classes.buttons}>\n                    {activeStep !== 0 && (\n                      <Button\n                        onClick={this.handleBack}\n                        className={classes.button}\n                      >\n                        Back\n                      </Button>\n                    )}\n                    <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? 'Submit' : 'Next'}\n                    </Button>\n                  </div>\n                </Fragment>\n              )}\n            </Fragment>\n          </Paper>\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormPage);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}